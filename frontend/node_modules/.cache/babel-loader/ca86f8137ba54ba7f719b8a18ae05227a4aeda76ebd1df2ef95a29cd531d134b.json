{"ast":null,"code":"import axios from \"axios\";\nconst testPerformance = async inputUrl => {\n  const encodedUrl = encodeURIComponent(inputUrl);\n  try {\n    const response = await axios.post(`http://127.0.0.1:8000/test/performance?url=${encodedUrl}`);\n    console.log(\"Response:\", response.data);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};\nexport const runPerformanceTest = async url => {\n  return axios.post(`${API_BASE_URL}/test/performance`, null, {\n    params: {\n      url\n    }\n  });\n};\nexport const runFunctionalityTest = async component => {\n  return axios.post(`${API_BASE_URL}/test/functionality`, null, {\n    params: {\n      component\n    }\n  });\n};\nexport const runSecurityTest = async endpoint => {\n  return axios.post(`${API_BASE_URL}/test/security`, null, {\n    params: {\n      endpoint\n    }\n  });\n};","map":{"version":3,"names":["axios","testPerformance","inputUrl","encodedUrl","encodeURIComponent","response","post","console","log","data","error","runPerformanceTest","url","API_BASE_URL","params","runFunctionalityTest","component","runSecurityTest","endpoint"],"sources":["/Users/sathwikallu/ai-testing-platform/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\n\nconst testPerformance = async (inputUrl) => {\n  const encodedUrl = encodeURIComponent(inputUrl);\n\n  try {\n    const response = await axios.post(`http://127.0.0.1:8000/test/performance?url=${encodedUrl}`);\n    console.log(\"Response:\", response.data);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};\n\nexport const runPerformanceTest = async (url) => {\n  return axios.post(`${API_BASE_URL}/test/performance`, null, {\n    params: { url },\n  });\n};\n\nexport const runFunctionalityTest = async (component) => {\n  return axios.post(`${API_BASE_URL}/test/functionality`, null, {\n    params: { component },\n  });\n};\n\nexport const runSecurityTest = async (endpoint) => {\n  return axios.post(`${API_BASE_URL}/test/security`, null, {\n    params: { endpoint },\n  });\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAMC,UAAU,GAAGC,kBAAkB,CAACF,QAAQ,CAAC;EAE/C,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,8CAA8CH,UAAU,EAAE,CAAC;IAC7FI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAACI,IAAI,CAAC;EACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,GAAG,IAAK;EAC/C,OAAOZ,KAAK,CAACM,IAAI,CAAC,GAAGO,YAAY,mBAAmB,EAAE,IAAI,EAAE;IAC1DC,MAAM,EAAE;MAAEF;IAAI;EAChB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAG,MAAOC,SAAS,IAAK;EACvD,OAAOhB,KAAK,CAACM,IAAI,CAAC,GAAGO,YAAY,qBAAqB,EAAE,IAAI,EAAE;IAC5DC,MAAM,EAAE;MAAEE;IAAU;EACtB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,OAAOlB,KAAK,CAACM,IAAI,CAAC,GAAGO,YAAY,gBAAgB,EAAE,IAAI,EAAE;IACvDC,MAAM,EAAE;MAAEI;IAAS;EACrB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}