{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000\"; // Your FastAPI backend URL\n\nconst testPerformance = async () => {\n  const url = \"https://example.com\"; // Replace with user input\n  const encodedUrl = encodeURIComponent(url);\n  console.log(\"Sending request to backend...\"); // Debugging log\n\n  try {\n    const response = await fetch(`http://127.0.0.1:8000/test/performance?url=${encodedUrl}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // Optional but good practice\n      }\n    });\n    const data = await response.json();\n    console.log(\"Response:\", data);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};\ntestPerformance(); // Run the function\n\nexport const runPerformanceTest = async url => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/test/performance?url=${encodeURIComponent(url)}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch test results\");\n    }\n    return await response.json(); // Return JSON response\n  } catch (error) {\n    console.error(\"Error running performance test:\", error);\n    return {\n      error: error.message\n    };\n  }\n};\nexport const runFunctionalityTest = async component => {\n  return axios.post(`${API_BASE_URL}/test/functionality`, null, {\n    params: {\n      component\n    }\n  });\n};\nexport const runSecurityTest = async endpoint => {\n  return axios.post(`${API_BASE_URL}/test/security`, null, {\n    params: {\n      endpoint\n    }\n  });\n};","map":{"version":3,"names":["axios","API_BASE_URL","testPerformance","url","encodedUrl","encodeURIComponent","console","log","response","fetch","method","headers","data","json","error","runPerformanceTest","ok","Error","message","runFunctionalityTest","component","post","params","runSecurityTest","endpoint"],"sources":["/Users/sathwikallu/ai-testing-platform/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://127.0.0.1:8000\"; // Your FastAPI backend URL\n\nconst testPerformance = async () => {\n  const url = \"https://example.com\"; // Replace with user input\n  const encodedUrl = encodeURIComponent(url);\n\n  console.log(\"Sending request to backend...\"); // Debugging log\n\n  try {\n    const response = await fetch(`http://127.0.0.1:8000/test/performance?url=${encodedUrl}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\", // Optional but good practice\n      },\n    });\n\n    const data = await response.json();\n    console.log(\"Response:\", data);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};\n\ntestPerformance(); // Run the function\n\nexport const runPerformanceTest = async (url) => {\n  try {\n      const response = await fetch(`${API_BASE_URL}/test/performance?url=${encodeURIComponent(url)}`, {\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n          },\n      });\n\n      if (!response.ok) {\n          throw new Error(\"Failed to fetch test results\");\n      }\n\n      return await response.json(); // Return JSON response\n  } catch (error) {\n      console.error(\"Error running performance test:\", error);\n      return { error: error.message };\n  }\n};\n\nexport const runFunctionalityTest = async (component) => {\n  return axios.post(`${API_BASE_URL}/test/functionality`, null, {\n    params: { component },\n  });\n};\n\nexport const runSecurityTest = async (endpoint) => {\n  return axios.post(`${API_BASE_URL}/test/security`, null, {\n    params: { endpoint },\n  });\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,GAAG,GAAG,qBAAqB,CAAC,CAAC;EACnC,MAAMC,UAAU,GAAGC,kBAAkB,CAACF,GAAG,CAAC;EAE1CG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC;;EAE9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8CL,UAAU,EAAE,EAAE;MACvFM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB,CAAE;MACtC;IACF,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCP,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEK,IAAI,CAAC;EAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC;AAEDZ,eAAe,CAAC,CAAC,CAAC,CAAC;;AAEnB,OAAO,MAAMa,kBAAkB,GAAG,MAAOZ,GAAG,IAAK;EAC/C,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,yBAAyBI,kBAAkB,CAACF,GAAG,CAAC,EAAE,EAAE;MAC5FO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACnD;IAEA,OAAO,MAAMT,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACI;IAAQ,CAAC;EACnC;AACF,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,SAAS,IAAK;EACvD,OAAOpB,KAAK,CAACqB,IAAI,CAAC,GAAGpB,YAAY,qBAAqB,EAAE,IAAI,EAAE;IAC5DqB,MAAM,EAAE;MAAEF;IAAU;EACtB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMG,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,OAAOxB,KAAK,CAACqB,IAAI,CAAC,GAAGpB,YAAY,gBAAgB,EAAE,IAAI,EAAE;IACvDqB,MAAM,EAAE;MAAEE;IAAS;EACrB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}