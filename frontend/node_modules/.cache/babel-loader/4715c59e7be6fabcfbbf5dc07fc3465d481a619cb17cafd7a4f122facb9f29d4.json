{"ast":null,"code":"var _jsxFileName = \"/Users/sathwikallu/ai-testing-platform/frontend/src/components/TestForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { runPerformanceTest, runFunctionalityTest, runSecurityTest } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestForm = () => {\n  _s();\n  const [testType, setTestType] = useState(\"performance\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleTest = async () => {\n    if (!inputValue) return;\n    try {\n      let response;\n      if (testType === \"performance\") {\n        response = await runPerformanceTest(inputValue);\n      } else if (testType === \"functionality\") {\n        response = await runFunctionalityTest(inputValue);\n      } else {\n        response = await runSecurityTest(inputValue);\n      }\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage(\"Error running test\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Testing Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: testType,\n      onChange: e => setTestType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"performance\",\n        children: \"Performance Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"functionality\",\n        children: \"Functionality Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"security\",\n        children: \"Security Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter test details...\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTest,\n      children: \"Run Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TestForm, \"0w6J8ILokhLkvNkC0pi/sq+srb0=\");\n_c = TestForm;\nexport default TestForm;\nvar _c;\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"names":["React","useState","runPerformanceTest","runFunctionalityTest","runSecurityTest","jsxDEV","_jsxDEV","TestForm","_s","testType","setTestType","inputValue","setInputValue","message","setMessage","handleTest","response","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/sathwikallu/ai-testing-platform/frontend/src/components/TestForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { runPerformanceTest, runFunctionalityTest, runSecurityTest } from \"../api\";\n\nconst TestForm = () => {\n  const [testType, setTestType] = useState(\"performance\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleTest = async () => {\n    if (!inputValue) return;\n\n    try {\n      let response;\n      if (testType === \"performance\") {\n        response = await runPerformanceTest(inputValue);\n      } else if (testType === \"functionality\") {\n        response = await runFunctionalityTest(inputValue);\n      } else {\n        response = await runSecurityTest(inputValue);\n      }\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage(\"Error running test\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>AI Testing Platform</h2>\n      <select value={testType} onChange={(e) => setTestType(e.target.value)}>\n        <option value=\"performance\">Performance Test</option>\n        <option value=\"functionality\">Functionality Test</option>\n        <option value=\"security\">Security Test</option>\n      </select>\n      <input type=\"text\" placeholder=\"Enter test details...\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\n      <button onClick={handleTest}>Run Test</button>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default TestForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}