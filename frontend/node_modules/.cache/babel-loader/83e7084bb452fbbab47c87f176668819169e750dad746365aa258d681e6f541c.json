{"ast":null,"code":"var _jsxFileName = \"/Users/sathwikallu/ai-testing-platform/frontend/src/components/TestForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { runPerformanceTest, runFunctionalityTest, runSecurityTest } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestForm = () => {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [selectedTest, setSelectedTest] = useState(\"performance\"); // Default test\n  const [testResult, setTestResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleTest = async () => {\n    setLoading(true);\n    setError(null);\n    setTestResult(null);\n    let result;\n    try {\n      if (selectedTest === \"performance\") {\n        result = await runPerformanceTest(url);\n      } else if (selectedTest === \"functionality\") {\n        result = await runFunctionalityTest(url);\n      } else if (selectedTest === \"security\") {\n        result = await runSecurityTest(url);\n      }\n      if (result.error) {\n        setError(result.error);\n      } else {\n        setTestResult(result); // Store response in state\n      }\n    } catch (err) {\n      setError(\"Failed to fetch test results.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Testing Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Test Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTest,\n      onChange: e => setSelectedTest(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"performance\",\n        children: \"Performance Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"functionality\",\n        children: \"Functionality Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"security\",\n        children: \"Security Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      placeholder: \"Enter website URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTest,\n      disabled: loading,\n      children: loading ? \"Testing...\" : \"Run Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this), testResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Test Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(testResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(TestForm, \"1yGtgtmRFCAI+XYuUEq5Zv50ccQ=\");\n_c = TestForm;\nexport default TestForm;\nvar _c;\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"names":["useState","runPerformanceTest","runFunctionalityTest","runSecurityTest","jsxDEV","_jsxDEV","TestForm","_s","url","setUrl","selectedTest","setSelectedTest","testResult","setTestResult","loading","setLoading","error","setError","handleTest","result","err","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","disabled","style","color","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/sathwikallu/ai-testing-platform/frontend/src/components/TestForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { runPerformanceTest, runFunctionalityTest, runSecurityTest } from \"../api\"; \n\nconst TestForm = () => {\n    const [url, setUrl] = useState(\"\");\n    const [selectedTest, setSelectedTest] = useState(\"performance\"); // Default test\n    const [testResult, setTestResult] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const handleTest = async () => {\n        setLoading(true);\n        setError(null);\n        setTestResult(null);\n\n        let result;\n        try {\n            if (selectedTest === \"performance\") {\n                result = await runPerformanceTest(url);\n            } else if (selectedTest === \"functionality\") {\n                result = await runFunctionalityTest(url);\n            } else if (selectedTest === \"security\") {\n                result = await runSecurityTest(url);\n            }\n\n            if (result.error) {\n                setError(result.error);\n            } else {\n                setTestResult(result); // Store response in state\n            }\n        } catch (err) {\n            setError(\"Failed to fetch test results.\");\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <h2>AI Testing Platform</h2>\n\n            {/* Dropdown to select test type */}\n            <label>Select Test Type:</label>\n            <select value={selectedTest} onChange={(e) => setSelectedTest(e.target.value)}>\n                <option value=\"performance\">Performance Test</option>\n                <option value=\"functionality\">Functionality Test</option>\n                <option value=\"security\">Security Test</option>\n            </select>\n\n            {/* URL Input Field */}\n            <input\n                type=\"text\"\n                value={url}\n                onChange={(e) => setUrl(e.target.value)}\n                placeholder=\"Enter website URL\"\n            />\n\n            {/* Run Test Button */}\n            <button onClick={handleTest} disabled={loading}>\n                {loading ? \"Testing...\" : \"Run Test\"}\n            </button>\n\n            {/* Error Message */}\n            {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\n\n            {/* Test Output */}\n            {testResult && (\n                <div>\n                    <h3>Test Output</h3>\n                    <pre>{JSON.stringify(testResult, null, 2)}</pre>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TestForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}